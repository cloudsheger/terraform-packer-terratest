packer {
  required_plugins {
    amazon = {
      source  = "github.com/hashicorp/amazon"
      version = "~> 1"
    }
    docker = {
      source  = "github.com/hashicorp/docker"
      version = "~> 1"
    }
  }
}

variable "ami_name_base" {
  type    = string
  default = "terratest-packer-docker-example"
}

variable "aws_region" {
  type    = string
  default = "us-east-1"
}

variable "instance_type" {
  type    = string
  default = "t2.micro"
}

data "amazon-ami" "autogenerated_1" {
  filters = {
    architecture                       = "x86_64"
    "block-device-mapping.volume-type" = "gp2"
    name                               = "*ubuntu-jammy-22.04-amd64-server-*"
    root-device-type                   = "ebs"
    virtualization-type                = "hvm"
  }
  most_recent = true
  owners      = ["099720109477"]
  region      = "${var.aws_region}"
}

# 1 error occurred upgrading the following block:
# unhandled "clean_resource_name" call:
# there is no way to automatically upgrade the "clean_resource_name" call.
# Please manually upgrade to use custom validation rules, `replace(string, substring, replacement)` or `regex_replace(string, substring, replacement)`
# Visit https://packer.io/docs/templates/hcl_templates/variables#custom-validation-rules , https://www.packer.io/docs/templates/hcl_templates/functions/string/replace or https://www.packer.io/docs/templates/hcl_templates/functions/string/regex_replace for more infos.

source "amazon-ebs" "ubuntu-ami" {
  ami_description = "An example of how to create a custom AMI with a simple web app on top of Ubuntu"
  ami_name        = replace(regex_replace(var.ami_name_base, "[^a-zA-Z0-9-]", "-"), "--", "-")
  encrypt_boot    = false
  instance_type   = "${var.instance_type}"
  region          = "${var.aws_region}"
  source_ami      = "${data.amazon-ami.autogenerated_1.id}"
  ssh_username    = "ubuntu"
}

source "docker" "ubuntu-docker" {
  changes = ["ENTRYPOINT [\"\"]"]
  commit  = true
  image   = "gruntwork/ubuntu-test:22.04"
}

build {
  sources = ["source.amazon-ebs.ubuntu-ami", "source.docker.ubuntu-docker"]

  provisioner "shell" {
    inline = ["echo 'Sleeping for a few seconds to give Ubuntu time to boot up'", "sleep 30"]
    only   = ["ubuntu-ami"]
  }

  provisioner "file" {
    destination = "/tmp/packer-docker-example"
    source      = "${path.root}"
  }

  provisioner "shell" {
    inline = ["/tmp/packer-docker-example/configure-sinatra-app.sh"]
  }

  post-processor "docker-tag" {
    only       = ["ubuntu-docker"]
    repository = "gruntwork/packer-docker-example"
    tag        = "latest"
  }
}
